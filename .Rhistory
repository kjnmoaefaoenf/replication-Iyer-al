install.packages("plm")
install.packages("lmtest")
install.packages("sandwich")
install.packages("stargazer")
install.packages("haven")
install.packages("here")
install.packages("clubSandwich")
'''
# Pour installer tous les packages nécessaires
# install.packages("tidyverse")
# install.packages("plm")
# install.packages("lmtest")
# install.packages("sandwich")
# install.packages("stargazer")
# install.packages("haven")
# install.packages("here")
# install.packages("clubSandwich")
# Chargement des packages nécessaires
library(tidyverse)
library(plm)
library(lmtest)
library(sandwich)
library(stargazer)
library(haven)
library(here)
library(clubSandwich)
data <- read_dta(here("tables1to5.dta"))
# Filtrer les états majeurs et l'année de réforme
table1 <- data %>%
filter(yearofres == 1, majstate == 1) %>%
count(year)
print(table1)
# Calcul des statistiques
table2a <- data %>%
filter(year >= 1985, majstate == 1) %>%
select(
pcr_womtot, prape2, pwomgirl, pkidmen, pcr_prop, pcr_order, pcr_econ,
pmurder, pmurder_love, psuic_f, psuic_m
) %>%
pivot_longer(everything(), names_to = "Variable") %>%
group_by(Variable) %>%
summarise(
Moyenne = mean(value, na.rm = TRUE),
`Écart-type` = sd(value, na.rm = TRUE),
Min = min(value, na.rm = TRUE),
Max = max(value, na.rm = TRUE)
) %>%
mutate(across(where(is.numeric), ~round(.x, 3)))
# Affichage
cat(sprintf("%-18s | %9s | %10s | %10s | %10s\n",
"Variable", "Moyenne", "Ecart-type", "Min", "Max"))
for(i in 1:nrow(table2a)) {
cat(sprintf("%-18s | %9.3f | %10.3f | %10.3f | %10.3f\n",
table2a$Variable[i], table2a$Moyenne[i], table2a$`Écart-type`[i],
table2a$Min[i], table2a$Max[i]))
}
# Fonction pour les étoiles
get_stars <- function(p) {
if (is.na(p)) return("")
if (p < 0.01) return("***")
if (p < 0.05) return("**")
if (p < 0.10) return("*")
return("")
}
# Estimation paramétrable
estimate <- function(dep_var, data, control_list = "", filter_expr = quote(year >= 1985 & majstate == 1), exp_var, cluster_var) {
df <- data %>% filter(!!filter_expr)
rhs <- paste(
c(exp_var, control_list, "factor(year)")[!sapply(c(exp_var, control_list, "factor(year)"), is.null)],
collapse = " + "
)
formula <- as.formula(paste(dep_var, "~", rhs))
mod <- plm(
formula,
data = df,
index = c(cluster_var, "year"),
model = "within"
)
ct <- coeftest(mod, vcov = vcovHC(mod, cluster = "group"))
r2 <- summary(mod)$r.squared["rsq"]
nobs <- nobs(mod)
if (!exp_var %in% rownames(ct)) {
return(tibble(
Variable = dep_var,
Coefficient = NA_real_,
StdError = NA_real_,
Stars = "",
pval = NA_real_,
R2 = r2,
N = nobs
))
}
coef <- ct[exp_var, 1]
se <- ct[exp_var, 2]
pval <- ct[exp_var, 4]
stars <- get_stars(pval)
tibble(
Variable = dep_var,
Coefficient = round(coef, 3),
StdError = round(se, 3),
Stars = stars,
pval = pval,
R2 = round(r2, 3),
N = nobs
)
}
# Fonction pour plusieurs variables dépendantes
estimate_multiple <- function(dep_vars, data, control_list = NULL, filter_expr = quote(year >= 1985 & majstate == 1), labels = NULL, exp_var="postwres", cluster_var="stateid") {
results <- map_dfr(dep_vars, ~estimate(.x, data, control_list, filter_expr, exp_var=exp_var, cluster_var=cluster_var))
if (!is.null(labels)) results$Variable <- labels
results
}
# Fonction d'affichage formaté
display_results <- function(results, title, digits = 3) {
cat(paste(title, "\n"))
cat("-----------------------------------------------------------------\n")
cat(sprintf("%-25s %-10s %-10s %-8s %-6s\n", "Variable dépendante", "Estimation", "Erreur std.", "R²", "N"))
cat("-----------------------------------------------------------------\n")
for (i in 1:nrow(results)) {
coef_str <- ifelse(is.na(results$Coefficient[i]), "NA", paste0(formatC(results$Coefficient[i], digits=digits, format="f"), results$Stars[i]))
se_str <- ifelse(is.na(results$StdError[i]), "NA", paste0("[", formatC(results$StdError[i], digits=digits, format="f"), "]"))
r2_str <- ifelse(is.na(results$R2[i]), "NA", formatC(results$R2[i], digits=2, format="f"))
n_str <- ifelse(is.na(results$N[i]), "NA", as.character(results$N[i]))
cat(sprintf("%-25s %-10s %-10s %-8s %-6s\n",
results$Variable[i],
coef_str,
se_str,
r2_str,
n_str))
}
cat("-----------------------------------------------------------------\n")
cat("* p<0.10, ** p<0.05, *** p<0.01\n")
}
dep_vars <- c("lpcr_womtot", "lprape2", "lpwomgirl")
labels <- c("Crimes totaux sur femmes", "Viols", "Kidnappings femmes")
results <- estimate_multiple(dep_vars, data, filter_expr = quote(year >= 1985 & majstate == 1), labels = labels)
display_results(results, "Effet du quota femmes sur les crimes contre les femmes (effets fixes état et année)")
# Variables dépendantes et labels
dep_vars <- c("lpcr_womtot", "lprape2", "lpwomgirl")
labels <- c("Crimes totaux sur femmes", "Viols", "Kidnappings femmes")
controls <- "pfemale + prural + plit + pfarm + womancm + pcgsdp"
results <- estimate_multiple(dep_vars, data, control_list = controls, labels = labels)
display_results(results, "Effet du quota femmes sur les crimes contre les femmes (contrôles démographiques, économiques et politiques)")
# Variables dépendantes et labels
dep_vars <- c("lpcr_womtot", "lprape2", "lpwomgirl")
labels <- c("Crimes totaux sur femmes", "Viols", "Kidnappings femmes")
controls <- "pfemale + prural + plit + pfarm + womancm + pcgsdp + ppol_strength"
results <- estimate_multiple(dep_vars, data, control_list = controls, labels = labels)
display_results(results, "Effet du quota femmes sur les crimes contre les femmes (contrôle sur l'usage de la force de la police)")
# Variables dépendantes et labels
dep_vars <- c("lpcr_womtot", "lprape2", "lpwomgirl")
labels <- c("Crimes totaux sur femmes", "Viols", "Kidnappings femmes")
controls <- "pfemale + prural + plit + pfarm + womancm + pcgsdp + ppol_strength + pwlit"
results <- estimate_multiple(dep_vars, data, control_list = controls, labels = labels)
display_results(results, "Effet du quota femmes sur les crimes contre les femmes (contrôle sur l'alphabétisation des femmes)")
# Création d'une variable trend centrée autour de 1995
data <- data %>%
mutate(trend = year - 1995)
# Variables dépendantes et labels
dep_vars <- c("lpcr_womtot", "lprape2", "lpwomgirl")
labels <- c("Crimes totaux sur femmes", "Viols", "Kidnappings femmes")
controls <- "factor(stateid):trend"
results <- estimate_multiple(dep_vars, data, control_list = controls, labels = labels)
display_results(results, "Effet du quota femmes sur les crimes contre les femmes (contrôle de tendance spécifique à l'état uniquement)")
# Variables dépendantes et labels
dep_vars <- c("lpcr_womtot", "lprape2", "lpwomgirl")
labels <- c("Crimes totaux sur femmes", "Viols", "Kidnappings femmes")
controls <- "pfemale + prural + plit + pfarm + womancm + pcgsdp + ppol_strength + factor(stateid):trend"
results <- estimate_multiple(dep_vars, data, control_list = controls, labels = labels)
display_results(results, "Effet du quota femmes sur les crimes contre les femmes (contrôle de tendance spécifique à l'état + tous les autres )")
# Variables dépendantes et labels
dep_vars <- c("lpkidmen", "lpcr_prop", "lpcr_order", "lpcr_econ")
labels <- c("Kidnapping hommes", "Crimes propriété", "Crimes ordre public", "Crimes économiques")
results <- estimate_multiple(dep_vars, data, labels = labels)
display_results(results, "Effet du quota femmes sur les crimes pas contre les femmes (sans contrôle)")
# Variables dépendantes et labels
dep_vars <- c("lpkidmen", "lpcr_prop", "lpcr_order", "lpcr_econ")
labels <- c("Kidnapping hommes", "Crimes propriété", "Crimes ordre public", "Crimes économiques")
controls <- "pfemale + prural + plit + pfarm + womancm + pcgsdp"
results <- estimate_multiple(dep_vars, data, control_list = controls, labels = labels)
display_results(results, "Effet du quota femmes sur les crimes pas contre les femmes (contrôles démographiques, économiques et politiques)")
# Variables dépendantes et labels
dep_vars <- c("lpkidmen", "lpcr_prop", "lpcr_order", "lpcr_econ")
labels <- c("Kidnapping hommes", "Crimes propriété", "Crimes ordre public", "Crimes économiques")
controls <- "pfemale + prural + plit + pfarm + womancm + pcgsdp + ppol_strength"
results <- estimate_multiple(dep_vars, data, control_list = controls, labels = labels)
display_results(results, "Effet du quota femmes sur les crimes pas contre les femmes (contrôles sur la force utilisée par la police)")
# Variables dépendantes et labels
dep_vars <- c("lpkidmen", "lpcr_prop", "lpcr_order", "lpcr_econ")
labels <- c("Kidnapping hommes", "Crimes propriété", "Crimes ordre public", "Crimes économiques")
controls <- "pfemale + prural + plit + pfarm + womancm + pcgsdp + ppol_strength  + factor(stateid):trend"
results <- estimate_multiple(dep_vars, data, control_list = controls, labels = labels)
display_results(results, "Effet du quota femmes sur les crimes pas contre les femmes (contrôles sur les trends par état)")
# Variables dépendantes et labels
dep_vars <- c("lpmurder", "lpsuic_f", "lpsuic_m", "lpmurder_love", "sh_murder_lovedowry")
labels <- c("Meutres", "Suicides de femmes", "Suicides d'hommes", '"Meutres passionnels"','Part "passionnelle"')
controls <- "pfemale + prural + plit + pfarm + womancm + pcgsdp + ppol_strength"
results <- estimate_multiple(dep_vars, data, control_list = controls, filter_expr = quote(year >= 1985 & majstate == 1), labels = labels)
display_results(results, "Panel A - Sans les trends par état")
controls <- "pfemale + prural + plit + pfarm + womancm + pcgsdp + ppol_strength  + factor(stateid):trend"
results <- estimate_multiple(dep_vars, data, control_list = controls, filter_expr = quote(year >= 1985 & majstate == 1), labels = labels)
display_results(results, "Panel B - Avec les trends par état")
# Variables dépendantes et labels
dep_vars <- c("lpmurder_f", "lpmurder_m")
labels <- c("Meutres de femmes", "Meutres d'hommes")
results <- estimate_multiple(dep_vars, data, control_list = "", filter_expr = quote(year >= 1985 & elec_womres > 1999 & majstate == 1), labels = labels)
display_results(results, "Panel A - Sans aucun contrôle")
controls <- "pfemale + prural + plit + pfarm + womancm + pcgsdp + ppol_strength"
results <- estimate_multiple(dep_vars, data, control_list = controls, filter_expr = quote(year >= 1985 & elec_womres > 1999 & majstate == 1), labels = labels)
display_results(results, "Panel A - Avec les contrôles mais sans les trends pas état")
controls <- "pfemale + prural + plit + pfarm + womancm + pcgsdp + ppol_strength  + factor(stateid):trend"
results <- estimate_multiple(dep_vars, data, control_list = controls, filter_expr = quote(year >= 1985 & elec_womres > 1999 & majstate == 1), labels = labels)
display_results(results, "Panel B - Avec les trends par état")
# Fonction d'estimation Tableau 6 et 7 pour les Panels complets
estimate_table67 <- function(dep_var, data, filter_expr, cluster_var = "gram_panchayat") {
df <- data %>% filter(!!filter_expr)
formula <- as.formula(paste(dep_var, "~ res_woman + factor(district) + factor(ident)"))
mod <- plm(formula, data = df)
ct <- coef_test(mod, vcov = vcovCR(mod, cluster = df[[cluster_var]], type = "CR1"))
if (!"res_woman" %in% rownames(ct)) {
return(tibble(
Variable = dep_var,
Estimate = NA_real_,
StdError = NA_real_,
Stars = "",
pval = NA_real_,
R2 = as.numeric(NA),
N = nobs(mod)
))
}
tibble(
Variable = dep_var,
Coefficient = ct["res_woman", 2],
StdError = ct["res_woman", 3],
Stars = get_stars(ct["res_woman", 5]),
pval = ct["res_woman", 5],
R2 = summary(mod)$r.squared["rsq"],
N = nobs(mod)
)
}
# Fonction pour plusieurs variables dépendantes
estimate_multiple67 <- function(dep_var, data, filter_expr, labels = "") {
results <- map_dfr(dep_var, ~estimate_table67(.x, data, filter_expr = filter_expr))
if (!is.null(labels)) results$Variable <- labels
results
}
# Charger les données
data6 <- read_dta(here("table6.dta"))
dep_vars6 <- c("anycrime", "s_molest", "s_evetease", "s_attack")
labels6 <- c("Tout crime", "Molestation", "Harcèlement sexuelle", "Agression physique")
# Femmes - Panel A
res6_f <- estimate_multiple67(dep_vars6, data6, filter_expr = quote(female == 1), labels6)
data7 <- read_dta(here("table7.dta"))
fir_vars <- c("fir_evetease", "fir_bicycle", "fir_cell", "fir_beaten", "fir_motor")
nfir_vars <- paste0("n", fir_vars)
# Standardisation des variables
for (v in fir_vars) {
m <- mean(data7[[v]][data7$res_woman == 1], na.rm = TRUE)
sdv <- sd(data7[[v]][data7$res_woman == 1], na.rm = TRUE)
data7[[paste0("n", v)]] <- (data7[[v]] - m) / sdv
}
# Création de la variable moyenne
data7 <- data7 %>%
rowwise() %>%
mutate(ave_fir = mean(c_across(all_of(nfir_vars)), na.rm = TRUE)) %>%
ungroup()
dep_vars7 <- c("ave_fir", "fir_evetease", "fir_cell", "fir_beaten")
labels7 <- c("Moyenne FIR", "FIR Harcèlement sexuel", "FIR téléphone", "FIR battue")
# Femmes, toute période
res7_f <- estimate_multiple67(dep_vars7, data7, filter_expr = quote(female == 1), labels7)
# Hommes, toute période
res7_m <- estimate_multiple67(dep_vars7, data7, filter_expr = quote(female == 0), labels7)
# Fonction d'estimation Tableau 6 et 7 pour les panels non complets
estimate_table67_part <- function(dep_var, data, filter_expr, cluster_var = "gram_panchayat") {
df <- data %>% filter(!!filter_expr)
formula <- as.formula(paste(dep_var, "~ res_woman + factor(district)"))
mod <- lm(formula, data = df)
ct <- coef_test(mod, vcov = vcovCR(mod, cluster = df[[cluster_var]], type = "CR1"))
if (!"res_woman" %in% rownames(ct)) {
return(tibble(
Variable = dep_var,
Estimate = NA_real_,
StdError = NA_real_,
Stars = "",
pval = NA_real_,
R2 = as.numeric(NA),
N = nobs(mod)
))
}
tibble(
Variable = dep_var,
Coefficient = ct["res_woman", 2],
StdError = ct["res_woman", 3],
Stars = get_stars(ct["res_woman", 5]),
pval = ct["res_woman", 5],
R2 = summary(mod)$r.squared["rsq"],
N = nobs(mod)
)
}
# Fonction pour plusieurs variables dépendantes
estimate_multiple67_part <- function(dep_var, data, filter_expr, labels = "") {
results <- map_dfr(dep_var, ~estimate_table67_part(.x, data, filter_expr = filter_expr))
if (!is.null(labels)) results$Variable <- labels
results
}
# Tableau 6 - Suite des calculs
res6_fb <- estimate_multiple67_part(dep_vars6, data6, filter_expr = quote(female == 1 & ident == "base"), labels6)
res6_fe <- estimate_multiple67_part(dep_vars6, data6, filter_expr = quote(female == 1 & ident == "end"), labels6)
# Tableau 7 - Suite des calculs
# Femmes - Panel B
res7_fb <- estimate_multiple67_part(dep_vars7, data7, filter_expr = quote(female == 1 & ident == "base"), labels7)
# Femmes - Panel C
res7_fe <- estimate_multiple67_part(dep_vars7, data7, filter_expr = quote(female == 1 & ident == "end"), labels7)
# Hommes - Panel B
res7_mb <- estimate_multiple67_part(dep_vars7, data7, filter_expr = quote(female == 0 & ident == "base"), labels7)
# Hommes - Panel C
res7_me <- estimate_multiple67_part(dep_vars7, data7, filter_expr = quote(female == 0 & ident == "end"), labels7)
display_results(res6_f, "Femmes (toute période)", 4)
display_results(res6_fb, "Femmes (Baseline)", 4)
display_results(res6_fe, "Femmes (End-line)", 4)
display_results(res7_f, "Femmes (toute période)", 4)
display_results(res7_fb, "Femmes (Baseline)", 4)
display_results(res7_fe, "Femmes (End-line)", 4)
display_results(res7_m, "Hommes (toute période)", 4)
display_results(res7_mb, "Hommes (Baseline)", 4)
display_results(res7_me, "Hommes (End-line)", 4)
# Pour table8a1.dta
data8a1 <- read_dta(here("table8a1.dta"))
data8a1 <- data8a1 %>% mutate(pyes = frequency / ntot)
print(data8a1)
# Pour table8a2.dta
data8a2 <- read_dta(here("table8a2.dta"))
data8a2 <- data8a2 %>% mutate(pyes = frequency / ntot)
print(data8a2)
estimate_table9 <- function(dep_var, data, year_min, controls, trend = FALSE) {
df <- data %>% filter(year >= year_min, majstate == 1)
if (trend) {
df <- df %>% mutate(trend = year - year_min)
rhs <- paste(controls, "factor(stateid):trend", "factor(year)", sep = " + ")
} else {
rhs <- paste(controls, "factor(year)", sep = " + ")
}
formula <- as.formula(paste(dep_var, "~ postwres +", rhs))
mod <- plm(
formula,
data = df,
index = c("stateid", "year"),
model = "within"
)
ct <- coeftest(mod, vcov = vcovHC(mod, cluster = "group"))
tibble(
Variable = dep_var,
Estimate = round(ct["postwres", 1], 3),
StdError = round(ct["postwres", 2], 3),
Stars = get_stars(ct["postwres", 4]),
pval = ct["postwres", 4],
R2 = round(summary(mod)$r.squared["rsq"], 3),
N = nobs(mod),
Trend = trend
)
}
# Fonction d'affichage complet du tableau 9
display_table9 <- function(results_m1, results_m2, title = "Tableau 9 - Effet du quota femmes sur l'activité policière", label_dict) {
cat(paste0(title, "\n"))
cat("-----------------------------------------------------------------------------------\n")
cat(sprintf("%-25s %-15s %-10s %-12s %-8s %-6s\n",
"Variable dépendante", "Spécification", "Estimation", "Erreur std.", "R²", "N"))
cat("-----------------------------------------------------------------------------------\n")
for (i in 1:nrow(results_m1)) {
# Panel A : sans trend spécifique à l'état
cat(sprintf("%-25s %-15s %-10s %-12s %-8s %-6s\n",
label_dict[results_m1$Variable[i]],
"Sans trend",
paste0(formatC(results_m1$Estimate[i], digits=3, format="f"), results_m1$Stars[i]),
paste0("[", formatC(results_m1$StdError[i], digits=3, format="f"), "]"),
formatC(results_m1$R2[i], digits=2, format="f"),
results_m1$N[i]))
# Panel B : avec trend spécifique à l'état
cat(sprintf("%-25s %-15s %-10s %-12s %-8s %-6s\n",
label_dict[results_m2$Variable[i]],
"Avec trend",
paste0(formatC(results_m2$Estimate[i], digits=3, format="f"), results_m2$Stars[i]),
paste0("[", formatC(results_m2$StdError[i], digits=3, format="f"), "]"),
formatC(results_m2$R2[i], digits=2, format="f"),
results_m2$N[i]))
}
cat("-----------------------------------------------------------------------------------\n")
cat("* p<0.10, ** p<0.05, *** p<0.01\n")
}
data9 <- read_dta(here("tables1to5.dta"))
arrest_vars <- c("lparrest_womcrime", "lparrest_rape", "lparrest_womgirl", "lparrest_nonwomen", "lparrest_kidmen")
arrest_dict <- c(
"lparrest_womcrime" = "Crimes vs femmes",
"lparrest_rape" = "Viols",
"lparrest_womgirl" = "Kidnapping de femmes",
"lparrest_nonwomen" = "Crimes pas vs femmes",
"lparrest_kidmen" = "Kidnapping d'hommes"
)
controls <- "pfemale + prural + plit + pfarm + womancm + pcgsdp + ppol_strength"
# Modèle sans trend
results9_m1 <- map_dfr(arrest_vars, ~estimate_table9(.x, data9, year_min = 1988, controls = controls, trend = FALSE))
# Modèle avec trend spécifique à l'état
results9_m2 <- map_dfr(arrest_vars, ~estimate_table9(.x, data9, year_min = 1988, controls = controls, trend = TRUE))
display_table9(results9_m1, results9_m2, "Tableau 9 - Effet du quota femmes sur l'activité policière", label_dict=arrest_dict)
# Import des données
data10a <- read_dta(here("table10a.dta"))
data10b <- read_dta(here("tables1to5.dta"))
estimate_table10A <- function(data, trend = FALSE) {
# Préparation
controls <- "wdistres + postwres + pfemale + purban + plitf"
if (trend) {
data <- data %>% mutate(trend = year - min(year, na.rm = TRUE))
rhs <- paste(controls, "factor(stateid):trend", "factor(year)", sep = " + ")
} else {
rhs <- paste(controls, "factor(year)", sep = " + ")
}
formula <- as.formula(paste("lpcr_wom ~", rhs))
mod <- plm(
formula,
data = data,
index = c("distid", "year"),
model = "within"
)
ct <- coeftest(mod, vcov = vcovHC(mod, cluster = "group"))
# Résultats pour wdistres et postwres
vars <- c("wdistres", "postwres")
res <- tibble(
Variable = vars,
Estimate = sapply(vars, function(v) if (v %in% rownames(ct)) round(ct[v, 1], 3) else NA_real_),
StdError = sapply(vars, function(v) if (v %in% rownames(ct)) round(ct[v, 2], 3) else NA_real_),
Stars = sapply(vars, function(v) if (v %in% rownames(ct)) get_stars(ct[v, 4]) else ""),
pval = sapply(vars, function(v) if (v %in% rownames(ct)) ct[v, 4] else NA_real_),
R2 = round(summary(mod)$r.squared["rsq"], 3),
N = nobs(mod),
Trend = trend
)
res
}
# Calculs
# Sans trend
res10a_m1 <- estimate_table10A(data10a, trend = FALSE)
# Avec trend
res10a_m2 <- estimate_table10A(data10a, trend = TRUE)
estimate_table10B <- function(dep_var, data, trend = FALSE, iv = FALSE) {
controls <- "pfemale + prural + pwlit + pfarm + womancm + pcgsdp + ppol_strength"
df <- data %>% filter(year >= 1985, majstate == 1)
if (trend) {
df <- df %>% mutate(trend = year - 1985)
rhs <- paste(controls, "factor(stateid):trend", "factor(year)", sep = " + ")
} else {
rhs <- paste(controls, "factor(year)", sep = " + ")
}
if (iv) {
# IV regression
formula <- as.formula(paste(dep_var, "~ wwinner +", rhs, "| . -wwinner + wwinclose5"))
mod <- plm(formula, data = df, index = c("stateid", "year"), model = "within")
} else {
# OLS regression
formula <- as.formula(paste(dep_var, "~ wwinner +", rhs))
mod <- plm(formula, data = df, index = c("stateid", "year"), model = "within")
}
ct <- coeftest(mod, vcov = vcovHC(mod, cluster = "group"))
tibble(
Variable = dep_var,
Estimate = if ("wwinner" %in% rownames(ct)) round(ct["wwinner", 1], 3) else NA_real_,
StdError = if ("wwinner" %in% rownames(ct)) round(ct["wwinner", 2], 3) else NA_real_,
Stars = if ("wwinner" %in% rownames(ct)) get_stars(ct["wwinner", 4]) else "",
pval = if ("wwinner" %in% rownames(ct)) ct["wwinner", 4] else NA_real_,
R2 = round(summary(mod)$r.squared["rsq"], 3),
N = nobs(mod),
Trend = trend,
IV = iv
)
}
dep_vars10B <- c("lpcr_womtot", "lprape2", "lpwomgirl")
# OLS sans trend
res10b_ols1 <- map_dfr(dep_vars10B, ~estimate_table10B(.x, data10b, trend = FALSE, iv = FALSE))
# OLS avec trend
res10b_ols2 <- map_dfr(dep_vars10B, ~estimate_table10B(.x, data10b, trend = TRUE, iv = FALSE))
# IV sans trend
res10b_iv1 <- map_dfr(dep_vars10B, ~estimate_table10B(.x, data10b, trend = FALSE, iv = TRUE))
# IV avec trend
res10b_iv2 <- map_dfr(dep_vars10B, ~estimate_table10B(.x, data10b, trend = TRUE, iv = TRUE))
affichage_table10 <- function(results, titre = NULL) {
if (!is.null(titre)) cat(titre, "\n")
cat(sprintf("%-15s | %-10s | %-10s | %-4s | %-6s | %-15s\n",
"Variable", "Estimation", "Erreur std.", "R²", "N", "Modèle"))
cat(strrep("-", 70), "\n")
for (i in 1:nrow(results)) {
coef_str <- ifelse(is.na(results$Estimate[i]), "NA", paste0(formatC(results$Estimate[i], digits=3, format="f"), results$Stars[i]))
se_str <- ifelse(is.na(results$StdError[i]), "NA", paste0("[", formatC(results$StdError[i], digits=3, format="f"), "]"))
r2_str <- ifelse(is.na(results$R2[i]), "NA", formatC(results$R2[i], digits=2, format="f"))
n_str <- ifelse(is.na(results$N[i]), "NA", as.character(results$N[i]))
modele_str <- ifelse(is.null(results$Modèle[i]), "", results$Modèle[i])
cat(sprintf("%-15s | %-10s | %-10s | %-4s | %-6s | %-15s\n",
results$Variable[i], coef_str, se_str, r2_str, n_str, results$Modèle[i]))
}
cat(strrep("-", 70), "\n")
cat("* p<0.10, ** p<0.05, *** p<0.01\n")
}
# Exemple d'utilisation
affichage_table10(bind_rows(
res10a_m1 %>% mutate(Modèle = "Sans trend état"),
res10a_m2 %>% mutate(Modèle = "Avec trend état")
), titre = "Tableau 10A - Effet quota district et état")
results10B <- bind_rows(
res10b_ols1 %>% mutate(Modèle = "OLS sans trend"),
res10b_ols2 %>% mutate(Modèle = "OLS avec trend"),
res10b_iv1 %>% mutate(Modèle = "IV sans trend"),
res10b_iv2 %>% mutate(Modèle = "IV avec trend")
)
affichage_table10(results10B, titre = "Tableau 10B - Femmes élues et crimes contre les femmes")
